@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":JobFestGoParser" as JobFestGoParser LOGIC_COLOR
participant ":SelectEventCommandParser" as SelectEventCommandParser LOGIC_COLOR
participant "se:SelectEventCommand" as SelectEventCommand LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box
[-> LogicManager : execute("select_event 1")
activate LogicManager

LogicManager -> JobFestGoParser : parseCommand("select_event 1")
activate JobFestGoParser

create SelectEventCommandParser
JobFestGoParser -> SelectEventCommandParser
activate SelectEventCommandParser

SelectEventCommandParser --> JobFestGoParser
deactivate SelectEventCommandParser

JobFestGoParser -> SelectEventCommandParser : parse("1")
activate SelectEventCommandParser

SelectEventCommandParser -> SelectEventCommandParser : parseIndex("1")

create SelectEventCommand
SelectEventCommandParser -> SelectEventCommand : new SelectEventCommand(1)
activate SelectEventCommand

SelectEventCommand --> SelectEventCommandParser
deactivate SelectEventCommand

SelectEventCommandParser --> JobFestGoParser
deactivate SelectEventCommandParser
destroy SelectEventCommandParser

JobFestGoParser --> LogicManager : se
deactivate JobFestGoParser

LogicManager -> SelectEventCommand : execute()
activate SelectEventCommand

SelectEventCommand -> Model : getFilteredEventList()
activate Model

Model --> SelectEventCommand
deactivate Model

SelectEventCommand -> Model : updateFilteredContactList(ContactIsInEvent)
activate Model

Model --> SelectEventCommand

SelectEventCommand -> Model: updateFilteredTaskList(TaskIsInEvent)


Model --> SelectEventCommand
deactivate Model

SelectEventCommand --> LogicManager : result
deactivate SelectEventCommand
destroy SelectEventCommand

[<--LogicManager
deactivate LogicManager
@enduml
